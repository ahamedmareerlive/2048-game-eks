# Common EKS + kubeconfig Errors and Fixes

## a) Permission Denied on kubeconfig

### Error
```
unable to write kubeconfig: unable to read existing kubeconfig file "/etc/rancher/k3s/k3s.yaml": permission denied
```

### Cause
- Your machine had k3s installed, which created a kubeconfig at `/etc/rancher/k3s/k3s.yaml`.
- `eksctl` tried to merge the EKS kubeconfig into this file.
- File owned by root → normal user could not read/write → permission denied.

### Fix
```bash
# Use a user-owned kubeconfig file
mkdir -p ~/.kube
aws eks update-kubeconfig --region us-east-1 --name game-app --kubeconfig ~/.kube/config

# Export kubeconfig path
export KUBECONFIG=~/.kube/config
```

✅ Now `kubectl` commands target the EKS cluster safely without touching k3s config.

---

## b) Invalid exec plugin API version

### Error
```
error: exec plugin: invalid apiVersion "client.authentication.k8s.io/v1alpha1"
```

### Cause
- EKS kubeconfig used `v1alpha1` for AWS IAM authentication.
- Newer `kubectl` versions (≥1.25) dropped support for `v1alpha1` → only accept `v1beta1` or `v1`.
- Happens when AWS CLI / AWS IAM Authenticator is outdated.

### Fixes

**Option 1: Upgrade AWS CLI (recommended)**
```bash
sudo apt update
sudo apt install unzip -y
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install --update

# Update kubeconfig again
aws eks update-kubeconfig --region us-east-1 --name game-app --kubeconfig ~/.kube/config
```

- Updated AWS CLI to v2 → kubeconfig now generates `apiVersion: v1beta1`.

**Option 2: Manual patch**
```yaml
# Before
apiVersion: client.authentication.k8s.io/v1alpha1

# After
apiVersion: client.authentication.k8s.io/v1beta1
```

✅ Solved compatibility issue with new kubectl.

---

## c) ResourceNotFoundException (Cluster Not Found)

### Error
```
unable to describe cluster control plane: operation error EKS: DescribeCluster, 
StatusCode: 404 ... ResourceNotFoundException: No cluster found for name: game-app.
```

### Cause
- `eksctl` tried to call `DescribeCluster` on `game-app`.
- AWS responded 404 Not Found → cluster not found in your current AWS account + region.

### Why this happens
1. **Wrong AWS Region**  
   - If you created the cluster in `us-east-1`, but `eksctl` defaults to another region, it won’t find it.  
   - `eksctl` only searches in one region at a time.

### Fix
```bash
eksctl utils associate-iam-oidc-provider --cluster game-app --region us-east-1 --approve
```
## d) ALB Ingress Has No Address

### Error
```bash
kubectl get ingress -n game-2048

NAME           CLASS   HOSTS   ADDRESS   PORTS   AGE
ingress-2048   alb     *       <none>    80      63m
```

When describing the ingress:
```bash
kubectl describe ingress ingress-2048 -n game-2048
```

The AWS Load Balancer Controller logs show:
```text
OperationNotPermitted: This AWS account currently does not support creating load balancers.
Account restriction: Cannot create ALB
Failed deploy model due to operation error Elastic Load Balancing v2: CreateLoadBalancer
StatusCode: 400, OperationNotPermitted
```

### Cause
This happens in new AWS accounts with no billing history.  
AWS restricts creating **Application Load Balancers (ALB)** and **Network Load Balancers (NLB)** until billing history is established.

### Fix
- Opened an AWS Support case regarding ALB creation restriction.  
- AWS confirmed the restriction is temporary and will be lifted automatically as billing usage builds up.  
- After some time, ALB creation started working and the `ADDRESS` field in `kubectl get ingress` showed the assigned ALB DNS name.  

✅ **Solved by waiting for AWS to lift new-account restrictions.**
